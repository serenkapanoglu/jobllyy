{"ast":null,"code":"import axios from \"axios\";\nconst BASE_URL = process.env.REACT_APP_BASE_URL || \"http://localhost:3001\";\nclass JoblyApi {\n  /* Necessary token to utilize API */\n\n  static async request(endpoint, data = {}, method = \"get\") {\n    console.debug(\"API Call:\", endpoint, data, method);\n    const url = `${BASE_URL}/${endpoint}`;\n    const headers = {\n      Authorization: `Bearer ${JoblyApi.token}`\n    };\n    const params = method === \"get\" ? data : {};\n    try {\n      return (await axios({\n        url,\n        method,\n        data,\n        params,\n        headers\n      })).data;\n    } catch (err) {\n      console.error(\"API Error:\", err.response);\n      let message = err.response.data.error.message;\n      throw Array.isArray(message) ? message : [message];\n    }\n  }\n\n  //API routes\n\n  /* Gets company details by handle */\n  static async getCompany(handle) {\n    let res = await this.request(`companies/${handle}`);\n    return res.company;\n  }\n\n  /* Gets current user profile by username */\n  static async getCurrentUser(username) {\n    let res = await this.request(`users/${username}`);\n    return res.user;\n  }\n\n  /*   Gets company list filtered by name  */\n  static async getCompanies(name) {\n    let res = await this.request(\"companies\", {\n      name\n    });\n    return res.companies;\n  }\n\n  /* Gets list of jobs filtered by title */\n  static async getJobs(title) {\n    let res = await this.request(\"jobs\", {\n      title\n    });\n    return res.jobs;\n  }\n\n  /* Applies to job */\n  static async applyToJob(username, id) {\n    await this.request(`users/${username}/jobs/${id}`, {}, \"post\");\n  }\n\n  /* Gets token with passed in data (username and password) */\n  static async login(data) {\n    let res = await this.request(`auth/token`, data, \"post\");\n    return res.token;\n  }\n\n  /* Signs up */\n  static async signup(data) {\n    let res = await this.request(`auth/register`, data, \"post\");\n    return res.token;\n  }\n\n  /* Saves profile of user */\n  static async saveProfile(username, data) {\n    let res = await this.request(`users/${username}`, data, \"patch\");\n    return res.user;\n  }\n}\nexport default JoblyApi;","map":{"version":3,"names":["axios","BASE_URL","process","env","REACT_APP_BASE_URL","JoblyApi","request","endpoint","data","method","console","debug","url","headers","Authorization","token","params","err","error","response","message","Array","isArray","getCompany","handle","res","company","getCurrentUser","username","user","getCompanies","name","companies","getJobs","title","jobs","applyToJob","id","login","signup","saveProfile"],"sources":["/Users/serenkapanoglu/Desktop/seren-job-searchh/frontend/src/api/api.js"],"sourcesContent":["import axios from \"axios\";\n\nconst BASE_URL = process.env.REACT_APP_BASE_URL || \"http://localhost:3001\";\n\nclass JoblyApi {\n  /* Necessary token to utilize API */\n  static token;\n\n  static async request(endpoint, data = {}, method = \"get\") {\n    console.debug(\"API Call:\", endpoint, data, method);\n\n    const url = `${BASE_URL}/${endpoint}`;\n    const headers = { Authorization: `Bearer ${JoblyApi.token}` };\n    const params = method === \"get\" ? data : {};\n\n    try {\n      return (await axios({ url, method, data, params, headers })).data;\n    } catch (err) {\n      console.error(\"API Error:\", err.response);\n      let message = err.response.data.error.message;\n      throw Array.isArray(message) ? message : [message];\n    }\n  }\n\n  //API routes\n\n  /* Gets company details by handle */\n  static async getCompany(handle) {\n    let res = await this.request(`companies/${handle}`);\n    return res.company;\n  }\n\n  /* Gets current user profile by username */\n  static async getCurrentUser(username) {\n    let res = await this.request(`users/${username}`);\n    return res.user;\n  }\n\n  /*   Gets company list filtered by name  */\n  static async getCompanies(name) {\n    let res = await this.request(\"companies\", { name });\n    return res.companies;\n  }\n\n  /* Gets list of jobs filtered by title */\n  static async getJobs(title) {\n    let res = await this.request(\"jobs\", { title });\n    return res.jobs;\n  }\n\n  /* Applies to job */\n  static async applyToJob(username, id) {\n    await this.request(`users/${username}/jobs/${id}`, {}, \"post\");\n  }\n\n  /* Gets token with passed in data (username and password) */\n  static async login(data) {\n    let res = await this.request(`auth/token`, data, \"post\");\n    return res.token;\n  }\n\n  /* Signs up */\n  static async signup(data) {\n    let res = await this.request(`auth/register`, data, \"post\");\n    return res.token;\n  }\n\n  /* Saves profile of user */\n  static async saveProfile(username, data) {\n    let res = await this.request(`users/${username}`, data, \"patch\");\n    return res.user;\n  }\n}\n\nexport default JoblyApi;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}